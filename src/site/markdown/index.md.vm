## Velocity treats double hashes as comments, which messes with markdown files. So $H can be used instead.
#set($h1 = '#')
#set($h2 = '##')
#set($h3 = '###')
#set($h4 = '####')
$h1 The Maven Smart Release Plugin for Git

This plugin is an alternative to the `maven-release-plugin` which was created with the following principles:

* It should be trivial to release modules from a multi-module plugin, and only those modules that have changes should be released
* No commits should be made to a repo during a release
* Maven conventions such as developing against SNAPSHOT versions should be retained
* Git should not need to be installed on the system.

The plugin works with the idea that a software module has two types of versions: the "major version" and the
"minor version". The major version is used for semantic versioning, and may be something like "1", "2", etc.
During development, the version in the pom is the business version with `-SNAPSHOT` appended. During a release, module
version becomes `<major>.<minor>`. However this version is not committed as a change to your pom. Instead the released
versions are recorded in a `.release-info.json` file that is updated during releases. Nothing else will be commited and
pushed to your repository.

This plugin automatically generates minor numbers, starting from 0 and incrementing each time, by looking at previous
releases in the `.release-info.json`.

When performing bugfix releases the bugfix version is automatically created and the version will be
`<major>.<minor>.<bugfix>`, starting with 1 for the bugfix version.

$h2 Quickstart

Add the following to your plugins section:

	<plugin>
		<groupId>${project.groupId}</groupId>
		<artifactId>${project.artifactId}</artifactId>
		<version>3.8</version>
	</plugin>

Release your project by running `mvn smart-release:release`

See [usage](usage.html) for more details.

$h2 Differences with the maven-release-plugin

* Only Git is supported
* Each module released will have a separate tag with its artifact ID and version so that it is easy to see when a
version of a module was released
* A module is only released if there are changes to it
* The release version of the pom is not committed back to the repository
* Tests are run once by default (or optionally not at all)

$h2 Prerequisites

The plugin requires **Maven ${project.prerequisites.maven}** or later and **Java 8** or later.